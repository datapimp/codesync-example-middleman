<div class="container-fluid">
<h1>CodeSync</h1>
<h3>Intelligent asset live reload for Rails, Middleman, and Sinatra</h3>
<p>CodeSync is designed to work with the Sprockets asset pipeline, and it aims to drastically cut down on the amount of times you have to reload the entire browser.</p>
<p>Previous live reload solutions resorted to automating your refreshing of the browser, which for the most simple static sites is fine.</p>
<p>However, as more and more apps are being written as single page apps, refreshing the browser often causes you to lose important state and requires you to have to recreate the state you are trying to test. For every single javascript and css change you make. Over, and over.</p>
<p>This is made worse by the fact that we are increasingly working on assets written in precompiled languages such as coffeescript, sass, haml, and less.</p>

<h3>Using CodeSync in your Rails app</h3>

<p>It is as simple as including the gem in your Gemfile:

<pre class="prettyprint">
# Gemfile of your rails app
gem 'code_sync', git:"git@github.com:datapimp/code_sync.git"
</pre>

<p>And including the following javascript snippet in your ERB or HAML layout</p>
<pre class="prettyprint">
&lt;%= javascript_include_tag 'code_sync', 'code_sync/editor' &gt;
&lt;script type="text/javascript"&gt;
window.codeSync = new CodeSync.Client()
&lt;script&gt;
</pre>
<p>From within your Rails directory</p>
<pre class="prettyprint">
bundle exec codesync start
</pre>
<p>Or, if you prefer, just create an initializer:</p>
<pre>
# config/initializers/code_sync.rb
CodeSync::Manager.start(sprockets: Rails.application.assets, forked: true)
</pre>

<h3>All set. Your asset pipeline changes will be pushed to your browser and be applied without refreshing the entire browser.</h3>

<p>
  <a href="http://middlemanapp.com">Middleman</a> is a great app for building static sites, and works great with CodeSync.
  You can download a sample middleman app here: <a href="https://github.com/datapimp/codesync-example-middleman">Github</a>
</p>

<pre class="prettyprint">
# Gemfile of your middleman app
gem 'middleman-sprockets'
gem 'code_sync', git:"git@github.com:datapimp/code_sync.git"
</pre>

<p>Simply activate <code>:code_sync</code> in your config.</p>
<pre class="prettyprint">
# middleman config.rb
activate :code_sync
</pre>
<p>And include the code_sync asset in your assets manifest:</p>
<pre class="prettyprint">
# middleman javascripts/site.coffee
= require 'code_sync/dependencies'
= require 'code_sync'

# include the optional editor
# to activate, press ctrl+j
= require 'code_sync/editor'

new CodeSync.Client()
</pre>

<p>Running <code>bundle exec middleman</code> will result in:</p>

<div class="image-wrapper">
  <img src="http://bit.ly/1753YKf" />
</div>

<p>Now any time you change any of your assets, the page will update to reflect your changes immediately.</p>

<p>If you are runing the sample app yourself, you can change any of the files in the <code>source/javascripts</code> or <code>source/stylesheets</code> directory and watch those changes take effect here.</p>

<h3>Using the in-browser editor</h3>
<p>If you require the code_sync/editor asset in your manifest file, you will have an in browser editor for all of your assets available. Press ctrl+j to activate.</p>
</div>